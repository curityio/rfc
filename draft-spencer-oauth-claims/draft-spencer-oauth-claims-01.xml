<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE rfc PUBLIC "-//IETF//DTD RFC 2629//EN" "http://xml2rfc.tools.ietf.org/authoring/rfc2629.dtd" [
        <!ENTITY c "client">
        <!ENTITY as "authorization server">
        <!ENTITY rs "resource server">
        <!ENTITY ro "resource owner">
        ]>

<?rfc compact="yes" ?>
<?rfc strict="yes" ?>
<?rfc subcompact="no" ?>
<?rfc symrefs="yes"?>
<?rfc toc="yes"?>
<?rfc tocdepth="2"?>
<?rfc tocindent="yes"?>
<?rfc tocompact="yes"?>

<rfc ipr="trust200902" category="std" docName="draft-spencer-oauth-claims-01" consensus="true" version="3">
    <front>
        <title abbrev="Claims">The OAuth 2.0 Authorization Framework: Claims</title>

        <seriesInfo name="Internet-Draft" value="draft-spencer-oauth-claims-01"/>

        <author fullname="Travis Spencer" initials="T." surname="Spencer">
            <organization>Curity AB</organization>

            <address>
                <email>travis@curity.io</email>
            </address>
        </author>

        <date day="23" month="November" year="2019"/>

        <area>Security</area>
        <workgroup>OAuth Working Group</workgroup>

        <keyword>RFC</keyword>
        <keyword>Request for Comments</keyword>
        <keyword>JSON</keyword>
        <keyword>Claim</keyword>
        <keyword>Assertion</keyword>
        <keyword>OAuth</keyword>

        <abstract>
            <t>
                This document extends the OAuth 2.0 framework to include a
                simple query language that can be used by &c;s to request
                certain claims from an &as;. This mechanism can
                be used during the authorization request and refresh request. It
                also defines a response parameter of the token and introspection
                endpoints that indicates to the caller which claims were
                authorized by the &ro;. Lastly, it stipulates how this
                request parameter can be used during token exchange, and how
                &c;s may request that certain claims be placed in an access
                token intended for a particular &rs;.
            </t>
        </abstract>
    </front>

    <middle>
        <section title="Introduction" anchor="introduction">
            <t>
                As stated in <xref target="RFC6749" section="1.4"/>, an
                access token represents the specific scope and duration of
                access. The requested scope is verified by the &as;
                according to its policy, and the perhaps-different scope
                is granted by the &ro;. The requested and granted
                scope may vary due to the &as;'s policy and/or
                the &ro;'s limitation of the granted scope. The
                resulting scope is enforced by the &rs;. The way in
                which the &c; indicates the intended scope of access is by
                the <tt>scope</tt> request parameter defined
                in <xref target="RFC6749" section="3.3"/>. This specification
                defines a more sophisticated instrument to achieve this same
                purpose.
            </t>

            <t>
                At times, this existing mechanism is too limited. In some uses
                cases, for example, a &c; may need to request particular
                claims from an &as;. It may also do this to
                request specific claim values. Furthermore, a &c; may need
                to indicate to the &as; that certain claims are
                essential for its ability to operate. In such cases, the grant
                is of little use to the &c; if the &ro; does not
                comply. Another example of when the existing
                <tt>scope</tt> parameter is insufficient is
                when the &c; knows that some claim is required by a
                particular &rs;. The extent of a &c;'s knowledge
                is usually limited to knowing that a claim is needed in an
                access token; however, in some cases, it may also know that a
                claim should be restricted to access tokens issued to a
                particular &rs;. In these situations, the existing
                mechanism for stipulating the scope of access is insufficient.
            </t>

            <t>
                To accommodate these use cases and requirements, this
                specification defines a new request parameter that can be used
                when the &c; obtains an authorization grant, as described in
                <xref target="RFC6749" section="1.3"/> and
                <xref target="I-D.ietf-oauth-token-exchange" section="2.1"/>. For each request
                wherein these fix grant types -- authorization code, implicit,
                resource owner password credentials, client credentials, and
                token exchange -- are sought, this specification defines a new
                parameter called <tt>claims</tt>. It can be
                used by a &c; with any of these to request that certain
                claims and/or particular claim values be authorized by the
                &ro;. The value of this parameter is a
                JavaScript Object Notation (JSON) object <xref target="RFC8259"
                />. This can also be used to indicate to the &as;
                that the &c; considers some or all of the claims to be
                required. The &c; can also use this object to indicate that
                certain claim values are preferred or essential to its ability
                to operate on behalf of the &ro;.
            </t>

            <t>
                During a refresh request (as described in
                <xref target="RFC6749" section="1.5"/>), the <tt>claims</tt>
                parameter defined herein can also be used to alter the resulting
                scope of access. This can be used, for example, to lessen the
                scope by including a certain subset of claims that should be in
                the new access token. After such, a &c; may increase the
                scope in a subsequent refresh request by including additional
                claim names in the JSON object value of the <tt>
                claims</tt> authorization request parameter. When it does so,
                the &c; cannot, however, expand the scope from that which was
                initially authorized by the &ro;.
            </t>

            <t>
                This specification also stipulates how the authorized claim
                names are returned from an authorization request and the result
                of introspecting a token.
            </t>

            <t>
                This specification is designed to be compatible with OpenID
                Connect <xref target="OpenID.Core"/> but does not require the
                &as; to support that protocol.
            </t>

            <section title="Claims Vis-a-vis Scope Tokens"
                     anchor="claims-vis-a-vis-scope-tokens">
                <t>
                    As previously stated, claims relate to scope tokens. How
                    exactly is beyond the extent of this specification. Instead,
                    this document provides a framework in which these two
                    constructs can be used together or independently. That said,
                    however, there are at least three common ways that claims
                    will be used:
                </t>

                <ol>
                    <li>Not at all (in which case this specification is
                        irrelevant).</li>
                    <li>In lieu of scope tokens.</li>
                    <li>Together with scope tokens.</li>
                </ol>

                <t>
                    The first and second option are straightforward. The third,
                    however, will require a specification to define the
                    relation between the two in order to achieve
                    interoperability. For instance, <xref target="OpenID.Core"/>
                    relates claims to scope tokens by grouping
                    certain claims into various scope tokens. This grouping of
                    claims into various scope tokens is RECOMMENDED when
                    simultaneously using claims and scope tokens to request
                    authorization.
                </t>
            </section>

            <section title="Notational Conventions"
                     anchor="notational-conventions">
                <t>
                    The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>",
                    "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL NOT</bcp14>",
                    "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>",
                    "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
                    "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be
                    interpreted as described in BCP&nbsp;14 <xref target="RFC2119"/> <xref
                        target="RFC8174"/> when, and only when, they appear in all capitals, as
                    shown here.
                </t>

                <t>
                    Unless otherwise noted, all the protocol parameter names and
                    values are case sensitive.
                </t>
            </section>

            <section title="Terminology" anchor="terminology">
                <t>
                    This specification uses the terms "Access Token",
                    "Authorization Code", "Authorization Endpoint",
                    "Authorization Grant", "Authorization Server", "Client",
                    "Grant Type", "Redirection URI",
                    "Refresh Token", "Resource Owner", "Resource Server",
                    and "Token Endpoint" defined by <xref target="RFC6749"/>;
                    "Claim", "Claim Name", and "Claim Value" defined by
                    <xref target="RFC7519"/>; and the following defined herein:
                </t>

                <dl newline="true" indent="8">
                    <dt>Claims Sink</dt>
                    <dd>
                        The location or destination where the &as;
                        MAY include all requested claims that are
                        authorized by the &ro;. An access token
                        intended for an unspecified &rs; or an
                        access token the &c; intends to send to a
                        particular &rs; or an ID token (when the
                        OpenID Connect profile of this specification is
                        used) are examples of claims sinks.
                    </dd>

                    <dt>Claims Request Object</dt>
                    <dd>
                        Has the meaning ascribed to it in <xref
                            target="claims-request-object"/>.
                    </dd>

                    <dt>Claims Sink Query Object</dt>
                    <dd>
                        Has the meaning ascribed to it in <xref
                            target="requesting-particular-claim-names-and-claim-values"/>.
                    </dd>

                    <dt>Claim Value Query Object</dt>
                    <dd>
                        Has the meaning ascribed to it in <xref
                            target="requesting-particular-claim-names-and-claim-values"/>.
                    </dd>

                    <dt>Critical Claim</dt>
                    <dd>
                        Has the meaning ascribed to it in <xref
                            target="critical-members-of-a-claims-request-object"/>.
                    </dd>

                    <dt>Essential Claim</dt>
                    <dd>
                        A claim specified by the &c; as being necessary
                        to ensure a smooth authorization experience for a
                        specific task requested by the &ro;.
                    </dd>

                    <dt>Scope Token</dt>
                    <dd>
                        A case-sensitive string joined by spaces together
                        with other such strings and included in the the
                        <tt>scope</tt> request parameter
                        of an authorization request (i.e., a
                        <tt>scope-token</tt> as set
                        forth in the ABNF of
                        <xref target="RFC6749" section="3.3"/>).
                    </dd>

                    <dt>Voluntary Claim</dt>
                    <dd>
                        A claim specified by the &c; as being useful but
                        not essential for the specific task requested by
                        the &ro;.
                    </dd>
                </dl>
            </section>
        </section>

        <section title="Protocol Flow" anchor="protocol-flow">
            <section title="Authorization Request" anchor="authorization-request">
               <t>
                   When a &c; requests authorization from the &ro;
                   indirectly via the &as;, the protocol flow
                   MAY include a query for certain claims. Based on the policy
                   of the &as; and the delegated access of the
                   &ro;, certain claims MAY be granted. Given an
                   authorization grant, the &as; informs the
                   &c; as to which claims were actually issued (if different
                   from those requested). This message exchange pattern is
                   shown in
                   <xref target="authorization-request-protocol-flow"/>:
               </t>

                <figure title="Protocol Flow that Includes Requested and
                    Granted Claims" anchor="authorization-request-protocol-flow">
                    <artwork type="ascii-art"><![CDATA[
+--------+                               +---------------+
| Client |--(A)- Authorization request ->| Authorization |
|        |     including claims request  |    Server     |
|        |              parameter        |               |
|        |                               |               |
|        |<-(B)-- Authorization grant ---|               |
|        |                               |               |
|        |--(C)-- Authorization grant -->|               |
|        |                               |               |
|        |<-(D)-Access token including --|               |
+--------+       granted claim names     +---------------+
]]>
                    </artwork>
                </figure>

                <t>
                    The steps in the flow illustrated in Figure 1 are generally
                    the same as those described in
                    <xref target="RFC6749" section="1.2"/> with a few important distinctions:
                </t>

                <ul>
                    <li>
                        During the authorization request (A), the &c;
                        includes a claims request object as the
                        corresponding value of the
                        <tt>claims</tt> request
                        parameter, as described in <xref target="requesting-particular-claim-names-and-claim-values"/> below.
                    </li>
                    <li>After obtaining (B) and presenting the authorization
                        grant (C), the response MAY include an access token
                        and a possibly-empty list of claim names that were
                        authorized (D). If the asserted claims embodied by
                        the access token differ from those requested (A),
                        then the &as; MUST include a list
                        of authorized claim names in the authorization
                        response (D).
                    </li>
                </ul>
            </section>

            <section title="Refresh Request" anchor="refresh-request">
                <t>
                    As described in <xref target="RFC6749" section="1.5"/> and
                    further explained in section 6 thereof, a &c; that was
                    issued a refresh token MAY use this to narrow the scope of
                    access for an access token. It does this by sending the
                    <tt>scope</tt> request parameter in step
                    (G) of Figure 2 of <xref target="RFC6749"/>. At times, the
                    &c; might want to be more explicit about which claims
                    should be included in the refreshed access token or about
                    where those claims should be asserted.
                </t>

                <t>
                    To address this need, this document defines an additional
                    input parameter that the &c; may send to the
                    &as; when it presents a refresh token to
                    the token endpoint. This update to the flow wherein a &c;
                    refreshes an access token to narrow the scope of access to
                    a particular set of claims is shown in
                    <xref target="refresh-token-flow"/>.
                </t>

                <figure title="Narrowing the Scope of Access to a
                    Particular Set of Claims" anchor="refresh-token-flow">
                    <artwork type="ascii-art"><![CDATA[
+--------+                               +---------------+
| Client |--(A)----- Refresh token ----->| Authorization |
|        |     including claims request  |    Server     |
|        |              parameter        |               |
|        |                               |               |
|        |<-(B)------ Access token ------|               |
|        | including granted claim names |               |
+--------+     & optional refresh token  +---------------+
]]>
                    </artwork>
                </figure>

                <t>
                    Downscoping in this flow is achieved when the &c;
                    requests a subset of the claims authorized by the &ro;.
                </t>

                <t>
                    The &c; MAY request to change the claims sink where the
                    authorized claims should be asserted using this flow. If the
                    &c; does so, it is RECOMMENDED that the &as;
                    accept this change baring any policy to the contrary.
                    The &c; MAY also send a claim value in the claim value
                    query object(s) of the request. When it does, the
                    &as; SHOULD consider this request when
                    asserting the claim but it MAY return an error if asserting
                    a different claim value is against its policy or exceeds the
                    authorization granted by the &ro;. If it is a
                    critical claim, the requested claim value MUST be asserted
                    or an error MUST result if the &as; supports
                    critical claims.
                </t>

                <t>
                    There are many corner cases that can arise when implementing
                    this flow. Most stem from policy and configuration changes
                    of the &as; which may happen between the
                    time an access token is issued and it is refreshed. Other
                    complications arise when claims are used together with scope
                    tokens. Both are beyond the scope of this specification and
                    not addressed by this memo.
                </t>
            </section>

            <section title="Token Introspection" anchor="token-introspection-response">
                <t>
                    <xref target="RFC7662"/> stipulates that the introspection
                    endpoint of an &as; must return a JSON
                    <xref target="RFC8259"/> document representing the meta
                    information surrounding the token, including its scope. This
                    specification extends that object to include the claim names
                    that the &ro; authorized the &c; for. This
                    request/response interaction pattern is shown in
                    <xref target="introspection-flow"/>.
                </t>

                <figure title="Introspecting an Access Token and Obtaining Granted Claims" anchor="introspection-flow">
                    <artwork type="ascii-art"><![CDATA[
+--------+                               +---------------+
| Client |--(A)----- Access token -----> | Authorization |
|        | send to introspection endpoint|    Server     |
|        |                               |               |
|        |                               |               |
|        |<-(B)------ JSON object -------|               |
|        |    including granted claim    |               |
+--------+             names             +---------------+
]]>
                    </artwork>
                </figure>

                <t>
                    Using this flow, a &c; will be informed about the
                    authorized claim names in the same way it is informed about
                    the scope of access by way of the
                    <tt>scope</tt> response member.
                </t>
            </section>

            <section title="Token Exchange" anchor="token-exchange">
                <t><cref anchor="Token_Exchange_TBD_1">TBD</cref></t>
            </section>
        </section>

        <section title="Claims Request Object" anchor="claims-request-object">
            <t>
                The <tt>claims</tt> request parameter value
                is a UTF-8 encoded JSON object ("Claims Request Object")
                specifying requested claims. Prior to transmission to the
                &as; it is also form-URL-encoded as appropriate.
                The claims request object is not intended to be a mechanism that
                the &c; may use to instruct the &as; to
                assert specific claims. Instead, it is a simple query language
                that a &c; can use to request certain claims or to specify
                that it would like the &as; to obtain
                authorization from the &ro; for a claim, perhaps with
                a particular claim value. The claims request object provides a
                &c; with a more structured method of requesting the scope of
                access that the &ro; authorizes it for.
            </t>
            <t>
                The top-level members of the claims request object SHOULD
                include at least one claims sink. The only specific claims sinks
                defined by this specification are
                <tt>access_token</tt>,
                <tt>*</tt>, and
                <tt>?</tt>. Additionally,
                this specification also sets forth a mechanism by which a &c;
                may signal to the &as; which claims it prefers
                to be included in an access token that it intends to be furnished to
                a particular &rs;; this is done by using an absolute
                URI of the target service or resource as a claims sink. A claims
                request object MAY also contain the member
                <tt>crit</tt> to indicate parts of the
                claims request object that the &as; MUST
                understand if the <tt>crit</tt> member
                itself is understood. Other members of a claims request object
                MAY be present; any that are not understood by the &as;
                MUST be ignored.
            </t>
            <t>
                An example of a claims request object that is sent to the
                &as; as the value of the
                <tt>claims</tt> request parameter provided during an
                authorization request, refresh request or token exchange
                request is shown in
                <xref target="example-claims-request-object"/>.
            </t>

            <figure anchor="example-claims-request-object"
                    title="Example of a Claims Request Object">
                <artwork>
                        <![CDATA[
{
    "access_token" : {

    }
}]]>
                </artwork>
            </figure>

            <t>
                In this non-normative example, the
                <tt>access_token</tt> member is the
                claims sink. It is the location where the &as;
                MAY include any of the requested claims that the &ro;
                authorizes. If the &as; uses the requested
                claims from a particular claims sink to derive or determine
                alternative claims which it asserts, it is RECOMMENDED to
                consider the &c;'s request to include those alternative
                claims in the same requested claims sink.
            </t>

            <section title="Requesting Particular Claim Names and Claim Values"
                     anchor="requesting-particular-claim-names-and-claim-values">
                <t>
                    Within the claims request object, a claims sink is
                    associated with another JSON object ("Claims Sink Query
                    Object"). This object contains properties that have the name
                    of a claim which the &c; is requesting the &as;
                    to assert. The possible values associated with each
                    of these is <tt>null</tt> or another
                    JSON object ("Claim Value Query Object").
                </t>

                <t>
                    When the value is <tt>null</tt>, it
                    indicates that the claim with the associated claim name is a
                    voluntary claim, and the &c; has no specific requirements
                    on the claim value. Conversely, when the claim value query
                    object is not <tt>null</tt> it is a
                    JSON object with the following properties:
                </t>

                <dl newline="true" indent="8">
                    <dt>essential</dt>
                    <dd>
                        OPTIONAL. Indicates whether the claim being
                        requested is an essential claim. If the value is
                        <tt>true</tt>, this indicates
                        that the claim is an essential claim. If the value
                        is <tt>false</tt> or if this
                        property is not include, then the claim is a
                        voluntary claim.
                    </dd>

                    <dt>value</dt>
                    <dd>
                        OPTIONAL. Requests that the claim be returned with
                        a particular value.
                    </dd>

                    <dt>values</dt>
                    <dd>
                        OPTIONAL. Requests that the claim be returned with
                        one of a set of values, with the values appearing
                        in order of preference.
                    </dd>
                </dl>

                <t>
                    The properties <tt>value</tt> and
                    <tt>values</tt> are mutually exclusive.
                    If the &c; sends a claim value query object with both,
                    the &as; MUST return an error as described
                    in <xref target="obtaining-authorization"/> below.
                </t>

                <t>
                    By requesting essential claims, the &c; indicates to the
                    &as; (who indicates to the &ro;)
                    that releasing these claims will ensure a smooth
                    authorization for the specific task requested by that
                    &ro;. If the claims are not available because the
                    &ro; did not authorize their release or they are
                    not present, the &as; MUST NOT generate an
                    error when claims are not returned.
                </t>

                <t>
                    Other members of the claim value query object MAY be defined
                    to provide additional information about the requested
                    claims. Any members of the claims value query object that are
                    not understood by the &as; MUST be ignored.
                </t>

                <t>
                    A non-normative example of the two possible types of values
                    for a claim value query object is shown in
                    <xref target="example-claim-value-query-object"/>.
                </t>

                <figure anchor="example-claim-value-query-object"
                        title="Example of a Claim Value Query Object">
                    <artwork>
                            <![CDATA[
{
    "access_token" : {
        "https://example.com/claim1" : null,
        "fname" : {
            "value" : "John"
        }
    }
}]]>
                    </artwork>
                </figure>

                <t>
                    In this example, there are two claim names which the &c;
                    is requesting
                    <tt>https://example.com/claim1</tt> and
                    <tt>fname</tt>. The values associated
                    with these are claim value query objects. The former is a
                    simple query where the &c; has no preference on a
                    particular value. For this reason, the &c; specifies the
                    value <tt>null</tt>. In the later case,
                    the &c; has more precise needs: it desires the
                    &as; to assert a claim value of
                    <tt>John</tt> for the claim name
                    <tt>fname</tt>. In such situations the
                    &as; MAY issue a claim with the claim name
                    <tt>fname</tt> but with some other claim
                    value than <tt>John</tt>. Both are
                    voluntary claims.
                </t>

                <t>
                    An example of an essential claim is shown in the
                    non-normative listing of
                    <xref target="example-essential-claim-value-query"/>.
                </t>

                <figure anchor="example-essential-claim-value-query"
                        title="Example of querying for an Essential Claim">
                    <sourcecode type="json"><![CDATA[
{
    "access_token" : {
        "consentId" : {
            "essential" : true
        }
    }
}]]>
                    </sourcecode>
                </figure>

                <t>
                    This query indicates that the &c; would like the
                    &as; to issue an access token with a scope
                    that includes a claim with the claim name
                    <tt>consentId</tt>. To ensure a smooth
                    authorization experience at the &rs; where the
                    &c; will present the resulting access token, the &c;
                    has indicated that the <tt>consentId</tt>
                    claim is required, making it an essential claim.
                </t>

                <t>
                    As described above, a &c; may also indicate that it
                    wishes the &as; to assert a claim having a
                    claim value that the &c; has some preference for. A
                    non-normative example of such a query is show in
                    <xref target="example-essential-claim-value-with-certain-value"/>.
                </t>

                <figure anchor="example-essential-claim-value-with-certain-value"
                        title="Example of querying for an Essential Claim with Certain Values">
                    <sourcecode type="json"><![CDATA[
{
    "access_token" : {
        "accountId" : {
            "values" : ["act-123", "act-456"],
            "essential" : true
        },
        "paymentId" : {
            "value" : "pid-123456",
            "essential" : true
        }
    }
}]]>
                    </sourcecode>
                </figure>

                <t>
                    In this example, the &c; is requesting that the
                    &as; assert two essential claims: one named
                    <tt>accountId</tt> and another named
                    <tt>paymentId</tt>. In the former case,
                    the &c; requests that the claim value be
                    <tt>act-123</tt> or
                    <tt>act-456</tt>. In the later case, a
                    claim named <tt>paymentId</tt> is
                    requested by the &c; to have a claim value of
                    <tt>pid-123456</tt>. Again, the
                    &as; MUST NOT return an error if the
                    &ro; does not authorize both of these claims or
                    if they are non-existent. This is merely a request for a
                    certain scope of access.
                </t>

                <t>
                    Another example inspired by the Revised Directive on
                    Payment Services (PSD2) is shown in the
                    non-normative listing of <xref target="psd2-example"/>.
                </t>

                <figure anchor="psd2-example"
                        title="PSD2-related Example">
                    <sourcecode type="json"><![CDATA[
{
    "access_token" : {
        "instructedAmount" : {
            "value" : {
                "amount" : 123.50,
                "currency" : "EUR"
            },
            "essential" : true
        },
        "debtorAccount/iban" : {
            "value" : "DE40100100103307118608",
            "essential" : true
        },
        "creditorName" : {
            "value" : "Merchant123",
            "essential" : true
        },
        "creditorAccount/iban" : {
            "value" : "DE02100100109307118603",
            "essential" : true
        },
        "remittanceInformationUnstructured" : {
            "value" : "Ref Number Merchant",
            "essential" : true
        }
    }
}]]>
                    </sourcecode>
                </figure>

                <t>
                    In this example, the &c; is requesting (but not forcing)
                    the &as; to obtain authorization from the
                    &ro; for five essential claims:
                    <tt>instructedAmount</tt>,
                    <tt>debtorAccount/iban</tt>,
                    <tt>creditorName</tt>,
                    <tt>creditorAccount/iban</tt>, and
                    <tt>remittanceInformationUnstructured</tt>.
                    The claim value query object associated with each of these
                    claim names has a particular value the &c; strongly
                    prefers. One interesting case is the value of the
                    <tt>instructedAmount</tt> essential
                    claim; the query for the value of this claim is a JSON
                    object with two properties. The &as; might
                    use this claims request object to obtain the &ro;'s
                    consent before granting them, for instance. It
                    might also check these values against a data source before
                    asserting them. Based on the &ro;'s choice or the
                    data source lookup results, the &as; may
                    not issue the claims at all or may do so with some other
                    value. For example, the &as; may actually
                    find that the <tt>instructedAmount</tt>
                    value requested exceeds its policy's allowed limit and only
                    prompt the &ro; to authorize 100 Euro.
                </t>

                <t>
                    <!-- TODO: Move to resource indicator section -->
                    Another interesting example of how structured scope of
                    access can be requested is shown in the listing of
                    <xref target="esi-example"/>.
                </t>

                <figure anchor="esi-example"
                        title="ESI-related Example">
                    <sourcecode type="json"><![CDATA[
{
    "access_token" : {
        "credentialID" : {
            "value" : "qes_eidas",
            "essential" : true
        },
        "documentDigests" : {
            "value" : {
                "hash":"sTOgwOm+474gFj0q0x1iSNspKqbcse4IeiqlDg/HW=",
                "label":"Mobile Subscription Contract"
            },
            "essential" : true
        },
        "hashAlgorithmOID" : {
            "value" : "2.16.840.1.101.3.4.2.1"
        }
    }
}]]>
                    </sourcecode>
                </figure>

                <t>
                    This example shows how a &c; may request claims defined
                    by the Electronic Signatures and Infrastructures (ESI)
                    Protocols for remote digital signature creation. Like the
                    previous example, the claims request object for the
                    <tt>access_token</tt> claims sink
                    includes a claim value query object for the
                    <tt>documentDigests</tt> claim that
                    includes a JSON object with multiple properties.
                </t>

                <t>
                    These illustrative examples hopefully impress upon the
                    reader the versatility of this query language and the
                    &as;'s prerogative to assert any claims with
                    any claim values it chooses in its sole discretion. If the
                    &c;'s needs are stronger than preferential, it MAY use
                    the <tt>crit</tt> member of the
                    claims request object which the &as; MAY
                    understand.
                </t>
            </section>

            <section title="Critical Members of a Claims Request Object"
                     anchor="critical-members-of-a-claims-request-object">
                <t>
                    As described previously, the &c; can indicate to the
                    &as; that certain claims are preferential or
                    essential to the smooth operation of the &c;. At times,
                    however, the &c;'s needs are stronger and require certain
                    claims to be asserted. In such situations, the &c; would
                    rather the &as; return an error than grant
                    access with different claims than those requested. This is
                    not always possible for an &as;, however,
                    and a &c; MUST NOT assume that the &as;
                    can be controlled in this manner. To know if this
                    interaction pattern in supported, the &c; must have a
                    priori knowledge gained by some means not defined by this
                    specification or by the presence of a <tt>
                    true</tt> value in the &as;'s
                    <tt>critical_claims_supported</tt>
                    metadata (see section
                    <xref target="authorization-server-metadata"/> below). An
                    &as; is RECOMMENDED to support this
                    capability unless it cannot. When it does, the &as;
                    MUST issue any claim denoted as critical or it MUST
                    return an error. The error must be
                    <tt>invalid_claims</tt> as described below
                    in <xref target="obtaining-authorization"/>.
                </t>

                <t>
                    A &c; indicates to the &as; that it must
                    understand certain claims and be able to assert them by
                    including a list of JSON Pointers
                    <xref target="RFC6901"/>
                    associated with the <tt>crit</tt> member
                    of the claims request object. Each such claim that the
                    elements of this list point to is a "Critical Claim". The
                    JSON Pointers in this list MUST refer to members of the
                    claims request object and MUST NOT point to elements within
                    the list itself. If any JSON Pointer refers to an element of
                    the JSON Pointer list, the &as; MUST return
                    an error with a code of
                    <tt>invalid_request</tt> if it supports
                    critical claims. When the JSON Pointers are valid, if the
                    &as; does not understand any of the claims
                    pointed to by any of the elements of this list, the
                    &as; MUST return an error of
                    <tt>invalid_claims</tt>. Likewise, if
                    the &as; is unable to assert a critical
                    claim (and it supports critical claims), it MUST return the
                    same error. If a critical claim is requested with a certain
                    value (as in the following example), the &as;
                    MUST assert the claim with that exact claim value. If
                    it's not able to (e.g., because the &ro; does not
                    have an attribute with that particular value), the
                    &as; MUST return an error with a code of
                    <tt>invalid_claims</tt> unless it does
                    not support critical claims.
                </t>

                <t>
                    A non-normative example of a claims request object with a
                    critical claim is shown in
                    <xref target="crit-claim-example"/>.
                </t>

                <figure anchor="crit-claim-example"
                        title="Example of a Request Containing a Critical Claim">
                    <sourcecode type="json"><![CDATA[
{
    "crit" : [
        "/access_token/verified_claims/verification/trust_framework/value"
    ],
    "access_token" : {
        "verified_claims" : {
            "verification" : {
                "trust_framework" : {
                    "value" : "de_aml"
                }
            }
        }
    }
}]]>
                    </sourcecode>
                </figure>

                <t>
                    In this example, the
                    <tt>value</tt> member of the
                    JSON object associated with
                    <tt>trust_framework</tt> must be
                    understood by the &as; because it is
                    pointed by the element of the critical claims list. The way
                    in which the &as; understands this
                    particular query is beyond the scope of this specification.
                    The only part of this example that is germane is the
                    <tt>crit</tt> member of the claims
                    request object which requires the &as; to
                    understand and assert a particular claim value (provided it
                    understands the <tt>crit</tt> itself).
                    If it cannot and if it supports critical claims, it must
                    return an error.
                </t>

                <t>
                    It is not uncommon for a claim name to defined as a URI
                    containing slashes (<tt>/</tt>, %x2F). When such a claim is
                    critical, the escaping described in
                    <xref target="RFC6901" section="3"/> MUST be used, as in the
                    non-normative listing of
                    <xref target="escaped-critical-claim-example"/>.
                </t>

                <figure anchor="escaped-critical-claim-example"
                        title="Example of Escaping the JSON Pointer used to Refer to a Critical Claim with a Name Containing Slashes">
                    <sourcecode type="json"><![CDATA[
{
    "crit" : ["/access_token/https:~1~1example.com~1claim1"],
    "access_token" : {
        "https://example.com/claim1" : null,
    }
}]]>
                    </sourcecode>
                </figure>
            </section>

            <section title="Special Claims Sinks">
                <t>
                    A &c; may know that it needs a particular claim; however,
                    it may not be aware which claims sink the claim should be
                    included in. The &c; may prefer to leave this determination
                    to the &as;. In such cases, the &c; MAY
                    use the claims sink <tt>?</tt> (%x3F) as
                    mentioned in <xref target="claims-request-object"/>
                    above. This special claim sink may result in the claim being
                    issued in the access token or any other claims sink that the
                    &as; deems appropriate. A non-normative
                    example of a claims request object indicating that a
                    particular claim be asserted in any claims sink is shown in
                    <xref target="example-any-claims-sink"/>.
                </t>

                <figure anchor="example-any-claims-sink"
                        title="Example Requesting a Claim to be Asserted in Any Claims Sink">
                    <sourcecode type="json"><![CDATA[
{
    "?" : {
        "https://example.com/claim1" : null,
    }
}]]>
                    </sourcecode>
                </figure>

                <t>
                    Similarly, there are situations where the &c; wishes
                    claims to be asserted in all claims sinks the &as;
                    supports. Rather than requiring the the &c; to
                    repeat its requirement for each claims sink, it MAY use the
                    special claims sink <tt>*</tt> (%x2A).
                    This claims sink indicates to the &as; that
                    the &c; prefers all claims included in the claims request
                    object to be asserted in each claim sink that the
                    &as; supports. The two claims request
                    objects shown in Figure
                    <xref target="example-all-claims-sink"/> and
                    <xref target="example-comparable-to-all-claims-sink"/>
                    are equivalent (if the &as; only supports
                    the two claims sinks shown in the latter).
                </t>

                <figure anchor="example-all-claims-sink"
                        title="Example Requesting a Claim to be Asserted in All Claims Sinks">
                    <sourcecode type="json"><![CDATA[
{
    "*" : {
        "https://exmaple.com/claim1" : null,
    }
}]]>
                    </sourcecode>
                </figure>

                <figure anchor="example-comparable-to-all-claims-sink"
                            title="Equivalent Example of Requesting a Claim to be Asserted in All Claims Sinks">
                    <sourcecode type="json"><![CDATA[

{
    "access_token" : {
        "https://exmaple.com/claim1" : null,
    },
    "my-good-claims-sink" : {
        "https://exmaple.com/claim1" : null,
    }
}]]>
                    </sourcecode>
                </figure>

                <t>
                    The use of either the claims sink
                    <tt>?</tt> and
                    <tt>*</tt> with any other claims sink
                    in the same claims request object is undefined. The
                    &as; SHOULD return an error or apply some other
                    logic not defined by this specification. The &c; SHOULD
                    NOT make such queries unless it has some knowledge gained a
                    priori about the &as;'s support of such a
                    query.
                </t>
            </section>
        </section>

        <section title="Obtaining Authorization"
                 anchor="obtaining-authorization">
            <t>
                As stated in <xref target="RFC6749" section="4"/>, a request
                for an access token requires the &c; to obtain authorization
                from the &ro;. As described there, this
                can be done using various grant types. To make a request for
                certain claims, the <tt>claims</tt> request
                parameter defined herein is used when requesting an
                authorization code, implicit, resource owner password
                credentials, or client credentials grant type. The
                <tt>claims</tt> request parameter MAY also
                be used with additional grant type that use the extension
                mechanism defined in <xref target="RFC6749" section="4.5"/>
                if so profiled by some other specification.
            </t>

            <section title="Authorization Code Grant"
                     anchor="authorization-code-grant">
                <section title="Authorization Request"
                         anchor="authorization-code-grant-authorization-request">
                    <t>
                        When a &c; seeks to obtain authorization using
                        the authorization code grant type defined in
                        <xref section="4.1" target="RFC6749"/>, the &c;
                        MAY include the following additional query
                        component that it sends to the authorization
                        endpoint URI:
                    </t>

                    <dl newline="true" indent="8">
                        <dt>claims</dt>
                        <dd>
                                OPTIONAL. A claims request object as
                                described in
                                <xref target="claims-request-object"/>.
                        </dd>
                    </dl>

                    <t>
                        The value of this parameter must use the
                        <tt>application/x-www-form-urlencoded</tt>
                        format defined in Appendix B of
                        <xref target="RFC6749"/>.
                    </t>

                    <t>
                        A non-normative example of a request to the authorization
                        endpoint with a URL-encoded value of the claims parameter
                        is shown in
                        <xref target="example-authorize-request-with-claims"/>
                        (with extra line breaks for display purposes only):
                    </t>

                    <figure anchor="example-authorize-request-with-claims"
                            title="Example of Using the Claims Request
                            Parameter on the Authorize Endpoint">

                        <sourcecode type="http"><![CDATA[
GET /authorize?client_id=s6BhdRkqt3&response_type=code&
    claims=%7B%0A%20%20%22access_token%22%20%3A%20%7B%20%0A
        %20%20%20%20%22https%3A%2F%2Fexample.com%2Fclaim1%22%20%3A
        %20null%2C%0A%20%20%20%20%22fname%22%20%3A%20%7B%0A%20%20
        %20%20%20%20%22value%22%20%3A%20%22John%22%0A%20%20%20%20
        %7D%0A%20%20%7D%0A%7D
Host: server.example.com
]]>
                        </sourcecode>
                    </figure>
                </section>

                <section title="Error Response"
                         anchor="authorization-code-grant-error-response">
                    <t>
                        If the &as; understands the
                        <tt>claims</tt> request
                        parameter, it MUST
                        redirect the user-agent of the &ro; to
                        the &c;'s redirection endpoint as described in
                        <xref section="4.1.2.1" target="RFC6749"/> with
                        one of the following
                        <tt>error</tt> values:
                    </t>

                    <dl newline="true" indent="8">
                        <dt>claims_not_supported</dt>
                        <dd>
                            The &as; understands but does not support
                            the <tt>claims</tt>
                            request parameter, and the &c; SHOULD
                            NOT use it when requesting authorization.
                        </dd>

                        <dt>invalid_request</dt>
                        <dd>
                            The &as; MAY use this
                            less-descriptive error code to indicate that
                            the claims request parameter value is not
                            accepted, e.g., because it is syntactically
                            incorrect. It is, however, RECOMMENDED that the
                            &as; return
                            <tt>claims_not_supported</tt>
                            or <tt>invalid_claims</tt> as
                            appropriate.
                        </dd>

                        <dt>invalid_claims</dt>
                        <dd>
                            When a &c; makes a request for a critical
                            claim, and the &as; cannot
                            assert such a claim because it is invalid,
                            unknown, or malformed, this error results. If
                            the request includes only claim names in the
                            claims request object which are disallowed
                            according to the &as;'s policy,
                            this error (or the less-descriptive alternative,
                            <tt>invalid_request</tt>)
                            MUST result.
                        </dd>
                    </dl>
                </section>

                <section title="Access Token Response"
                         anchor="authorization-code-grant-access-token-response">
                    <t>
                        In a non-error case, the &as; MAY
                        include details about the claims that the &c;
                        is authorized for. This is done by augmenting the
                        response defined in
                        <xref target="RFC6749" section="4.1.4"/>. In particular, the
                        &as; MAY include the following
                        response member in the JSON object returned from
                        the token endpoint:
                    </t>

                    <dl newline="true" indent="8">
                        <dt>claims</dt>
                        <dd>
                            OPTIONAL, if identical to the claims
                            requested by the &c;; otherwise,
                            REQUIRED. The space-separated claim names
                            granted by the &ro; which denote
                            the scope of the access token that is
                            returned in the same response.
                        </dd>
                    </dl>
                </section>
            </section>

            <section title="Implicit Flow" anchor="implicit-flow">
                <section title="Authorization Request"
                         anchor="implicit-flow-authorization-request">
                    <t>
                        When a &c; seeks to obtain authorization using
                        the implicit grant type defined in
                        <xref target="RFC6749" section="4.2"/>, the &c; MAY include
                        the following additional query component that it
                        sends to the authorization endpoint URI:
                    </t>

                    <dl newline="true" indent="8">
                        <dt>claims</dt>
                        <dd>
                            OPTIONAL. A claims request object as
                            described in
                            <xref target="claims-request-object"/>.
                        </dd>
                    </dl>

                    <t>
                        The value of this parameter must use the
                        <tt>application/x-www-form-urlencoded</tt>
                        format defined in Appendix B of
                        <xref target="RFC6749"/>.
                    </t>
                </section>

                <section title="Access Token Response"
                         anchor="implicit-flow-authorization-response">
                    <t>
                        In a non-error case, the &as; MAY
                        include details about the claims that the &c; is
                        authorized for. This is done by augmenting the
                        response defined in
                        <xref target="RFC6749" section="4.2.2"/>. In particular, the
                        &as; MAY include the following
                        response parameter included on the fragment
                        component of the redirection URI:
                    </t>

                    <dl newline="true" indent="8">
                        <dt>claims</dt>
                        <dd>
                            OPTIONAL, if identical to the claims
                            requested by the &c;; otherwise,
                            REQUIRED. The space-separated claim names
                            granted by the &ro; which denote
                            the scope of the access token that is
                            returned in the same response.
                        </dd>
                    </dl>
                </section>

                <section title="Error Response"
                         anchor="implicit-flow-error-response">
                    <t>
                        If the &as; understands the
                        <tt>claims</tt> request
                        parameter, it MUST
                        redirect the user-agent of the &ro; to
                        the &c;'s redirection URI as described in
                        <xref target="RFC6749" section="4.2.2.1"/> with
                        one of the following
                        <tt>error</tt> values:
                    </t>

                    <dl newline="true" indent="8">
                        <dt>claims_not_supported</dt>
                        <dd>
                            The &as; understands but does not support
                            the <tt>claims</tt>
                            request parameter, and the &c; SHOULD
                            NOT use it when requesting authorization.
                        </dd>

                        <dt>invalid_request</dt>
                        <dd>
                            The &as; MAY use this
                            less-descriptive error code to indicate that the
                            claims request parameter value is not
                            accepted, e.g., because it is syntactically.
                            incorrect. It is, however, RECOMMENDED that the
                            &as; return
                            <tt>claims_not_supported</tt>
                            or <tt>invalid_claims</tt> as
                            appropriate.
                        </dd>

                        <dt>invalid_claims</dt>
                        <dd>
                            When a &c; makes a request for a critical
                            claim, and the &as; cannot
                            assert such a claim because it is invalid,
                            unknown, or malformed, this error results. If
                            the request includes only claim names in the
                            claims request object which are disallowed
                            according to the &as;'s policy,
                            this error (or the less-descriptive alternative,
                            <tt>invalid_request</tt>)
                            MUST result.
                        </dd>
                    </dl>
                </section>
            </section>

            <section title="Resource Owner Password Credentials Grant"
                     anchor="resource-owner-password-credentials-grant">
                <section title="Access Token Request"
                         anchor="ropc-access-token-request">
                    <t>
                        When a &c; seeks to obtain authorization using
                        the resource owner password credentials grant type
                        defined in <xref section="4.3" target="RFC6749"/>,
                        the &c; MAY include the following additional
                        parameter using the
                        <tt>application/x-www-form-urlencoded</tt>
                        format per Appendix B of <xref target="RFC6749"/>
                        with a character encoding of UTF-8 in the HTTP
                        request entity-body:
                    </t>

                    <dl newline="true" indent="8">
                    <dt>claims</dt>
                            <dd>
                            OPTIONAL. A claims request object as
                            described in
                            <xref target="claims-request-object"/>.
                        </dd>
                    </dl>
                </section>

                <section title="Access Token Response"
                         anchor="ropc-access-token-response">
                    <t>
                        In a non-error case, the &as; MAY
                        include details about the claims that the &c; is
                        authorized for. This is done by augmenting the
                        response defined in
                        <xref target="RFC6749" section="4.3.3"/>. In particular, the
                        &as; MAY include the following
                        response member in the JSON object returned from
                        the token endpoint:
                    </t>

                    <dl newline="true" indent="8">
                        <dt>claims</dt>
                        <dd>
                            OPTIONAL, if identical to the claims
                            requested by the &c;; otherwise,
                            REQUIRED. The space-separated claim names
                            the &c; is authorized for which denote
                            the scope of the access token that is
                            returned in the same response.
                       </dd>
                    </dl>

                    <t>
                        If the request is invalid due to the value
                        of the <tt>claims</tt>
                        parameter, the &as; returns an
                        error with one of the following error codes:
                    </t>

                    <dl newline="true" indent="8">
                        <dt>claims_not_supported</dt>
                        <dd>
                            The &as; understands but does not support
                            the <tt>claims</tt>
                            request parameter, and the &c; SHOULD
                            NOT use it when requesting an access token.
                        </dd>

                        <dt>invalid_request</dt>
                           <dd>
                            The &as; MAY use this
                            less-descriptive error code to indicate that
                            the claims request parameter value is not
                            accepted, accepted, e.g., because it is
                            syntactically incorrect. It is, however,
                            RECOMMENDED that the &as; return
                            <tt>claims_not_supported</tt>
                            or <tt>invalid_claims</tt> as
                            appropriate.
                        </dd>

                        <dt>invalid_claims</dt>
                           <dd>
                            When a &c; makes a request for a critical
                            claim, and the &as; cannot
                            assert such a claim because it is invalid,
                            unknown, or malformed, this error results. If
                            the request includes only claim names in the
                            claims request object which are disallowed
                            according to the &as;'s policy,
                            this error (or the less-descriptive alternative,
                            <tt>invalid_request</tt>)
                            MUST result.
                        </dd>
                    </dl>
                </section>
            </section>

            <section title="Client Credentials Grant"
                     anchor="client-credentials-grant">
                <section title="Access Token Request"
                         anchor="cc-access-token-request">
                    <t>
                        When a &c; seeks to obtain authorization using
                        the client credentials grant type defined in
                        <xref target="RFC6749" section="4.4"/>, the &c;
                        MAY include the following additional parameter
                        using the
                        <tt>application/x-www-form-urlencoded</tt>
                        format per Appendix B of <xref target="RFC6749"/>
                        with a character encoding of UTF-8 in the HTTP
                        request entity-body:
                    </t>

                    <dl newline="true" indent="8">
                        <dt>claims</dt>
                        <dd>
                            OPTIONAL. A claims request object as
                            described in  <xref
                                target="claims-request-object"/>.
                        </dd>
                    </dl>
                </section>

                <section title="Access Token Response"
                         anchor="cc-access-token-response">
                    <t>
                        In a non-error case, the &as; MAY
                        include details about the claims that the &c;
                        is authorized for. This is done by augmenting the
                        response defined in
                        <xref target="RFC6749" section="4.4.3"/>. In particular, the
                        &as; MAY include the following
                        response member in the JSON object returned from
                        the token endpoint:
                    </t>

                    <dl newline="true" indent="8">
                        <dt>claims</dt>
                        <dd>
                                OPTIONAL, if identical to the claims
                                requested by the &c;; otherwise,
                                REQUIRED. The space-separated claim names
                                the &c; is authorized for which denote
                                the scope of the access token that is
                                returned in the same response.
                        </dd>
                    </dl>

                    <t>
                        If the request is invalid due to the
                        value of the <tt>claims</tt>
                        parameter, the &as; returns an
                        error with one of the following error codes:
                    </t>

                    <dl newline="true" indent="8">
                        <dt>claims_not_supported</dt>
                        <dd>
                            The &as; understands but does not support
                            the <tt>claims</tt>
                            request parameter, and the &c; SHOULD
                            NOT use it when requesting an access token.
                        </dd>

                        <dt>invalid_request</dt>
                        <dd>
                            The &as; MAY use this
                            less-descriptive error code to indicate that
                            the claims request parameter value is not
                            accepted, e.g., because it is syntactically
                            incorrect. It is, however, RECOMMENDED that the
                            &as; return
                            <tt>claims_not_supported</tt>
                            or <tt>invalid_claims</tt> as
                            appropriate.
                        </dd>

                        <dt>invalid_claims</dt>
                        <dd>
                            When a &c; makes a request for a critical
                            claim, and the &as; cannot
                            assert such a claim because it is invalid,
                            unknown, or malformed, this error results. If
                            the request includes only claim names in the
                            claims request object which are disallowed
                            according to the &as;'s policy,
                            this error (or the less-descriptive alternative,
                            <tt>invalid_request</tt>)
                            MUST result.
                        </dd>
                    </dl>
                </section>
            </section>
        </section>

        <section title="Token Refresh" anchor="token-refresh">
            <t>
                As defined in <xref target="RFC6749" section="6"/>, a &c;
                may be provided with a refresh token. When it is, it can
                present this to the token endpoint of the &as;
                in a refresh request. This specification extends the
                request and response of this flow as described in the following
                subsections.
            </t>

            <section title="Token Refresh Request">
                <t>
                    When performing a token refresh request, the &c; MAY
                    send the following parameter using the
                    <tt>application/x-www-form-urlencoded</tt>
                    format per Appendix B of <xref target="RFC6749"/> with
                    a character encoding of UTF-8 in the HTTP request
                    entity-body:
                </t>

                <dl newline="true" indent="8">
                    <dt>claims</dt>
                    <dd>
                        OPTIONAL. A claims request object as described in
                        <xref target="claims-request-object"/>.
                    </dd>
                </dl>

                <t>
                    If the &c; includes a claims request object in the
                    request, it SHOULD ensure that the claim names in the
                    claims value query object(s) are ones that were authorized
                    by the &ro;. It can do this by remembering what
                    was originally requested and/or from the &as;'s
                    response to its authorization request which
                    will include the list of claim names if they differ from
                    those originally requested.
                </t>
            </section>

            <section title="Access Refresh Response"
                     anchor="refresh-access-token-response">
                <t>
                    In a non-error case, the &as; MAY include
                    details about the claims that the &c; is authorized for.
                    This is done by augmenting the response defined in
                    <xref target="RFC6749" section="5.1"/>. In particular, the
                    &as; MAY include the following response
                    member in the JSON object returned from the token endpoint:
                </t>

                <dl newline="true" indent="8">
                    <dt>claims</dt>
                    <dd>
                        OPTIONAL, if identical to the claims requested by
                        the &c;; otherwise, REQUIRED. The
                        space-separated claim names the &c; is
                        authorized for which denote the scope of the access
                        token that is returned in the same response.
                    </dd>
                </dl>

                <t>
                    If the request is invalid due to the value of the value of
                    the <tt>claims</tt> parameter, the
                    &as; returns an error with one of the
                    following error codes:
                </t>

                <dl newline="true" indent="8">
                    <dt>claims_not_supported</dt>
                    <dd>
                        The &as; understands but does not
                        support the <tt>claims</tt>
                        request parameter, and the &c; SHOULD NOT use
                        it when requesting an access token.
                    </dd>

                    <dt>invalid_request</dt>
                    <dd>
                        The &as; MAY use this
                        less-descriptive error code to indicate that the
                        claims request parameter value is not accepted,
                        e.g., because it is syntactically incorrect. It
                        is, however, RECOMMENDED that the &as;
                        return
                        <tt>claims_not_supported</tt>
                        or <tt>invalid_claims</tt> as
                        appropriate.
                    </dd>

                    <dt>invalid_claims</dt>
                    <dd>
                        When a &c; makes a request for a critical claim,
                        and the &as; cannot assert such a
                        claim because it is invalid, unknown, or malformed,
                        this error results. If the request includes only
                        claim names in the claims request object which are
                        disallowed according to the &as;'s
                        policy, this error (or the
                        less-descriptive alternative,
                        <tt>invalid_request</tt>)
                        MUST result.
                    </dd>
                </dl>
            </section>
        </section>

        <section title="Token Exchange" anchor="token-exhange">
            <t><cref anchor="Token_Exchange_TBD_2">TBD</cref></t>
        </section>

        <section title="Token Introspection" anchor="token-introspection">
            <t>
                This specification defines an additional top-level member in
                the JSON <xref target="RFC8259"/> object of the &as;'s
                introspection endpoint response as stipulated in
                <xref target="RFC7662" section="2.2"/>.
            </t>

            <dl newline="true" indent="8">
                <dt>claims</dt>
                <dd>
                    OPTIONAL. The space-separated claim names granted by the &ro;
                    which denote the scope of the access token.
                </dd>
            </dl>
        </section>

        <section title="Requesting Claims for a Particular Protected Resource">
            <t><cref anchor="Resource_Indicator_TBD_1">TBD</cref></t>
        </section>

        <section title="Authorization Server Metadata" anchor="authorization-server-metadata">
            <t>
                An &as; that supports the
                <tt>claims</tt> request parameter SHOULD
                declare this fact by including the following property in the
                &as; metadata response
                <xref target="RFC8414"/>:
            </t>

            <dl newline="true" indent="8">
                <dt>claims_parameter_supported</dt>
                <dd>
                    OPTIONAL. A boolean value indicating that the
                    &as; supports the
                    <tt>claims</tt> request parameter or
                    not. A value of <tt>true</tt>
                    indicates that it is supported. A value of
                    <tt>false</tt>, a
                    <tt>null</tt> value, or the absence
                    of the property means that the
                    <tt>claims</tt> request parameter is
                    not supported by the &as;.
                </dd>

                <dt>claims_supported</dt>
                <dd>
                    RECOMMENDED. JSON array containing a list of the claim
                    names of the Claims that the &as; MAY
                    be able to supply values for. Note that for privacy or
                    other reasons, this might not be an exhaustive list.
                </dd>

                <dt>critical_claims_supported</dt>
                <dd>
                    OPTIONAL. A boolean value indicating that the
                    &as; supports the possibility for the
                    &c; to indicate that certain parts of a claims
                    request object MUST be understood by the &as;.
                    A value of <tt>false</tt>,
                    a <tt>null</tt> value, or the
                    absence of this member means that the &as;
                    MAY not support this interaction pattern, and
                    the &c; MUST NOT assume that it does.
                </dd>
            </dl>

            <t>
                If the &as; returns a value of
                <tt>false</tt> for
                <tt>claims_parameter_supported</tt> and
                true for <tt>critical_claims_supported</tt>,
                the interpretation by the &c; is undefined. It is
                RECOMMENDED that the &c; assume that the &as;
                is misconfigured and that it not attempt to request
                claims in a manner defined by this specification.
            </t>

            <t>
                A non-normative example of the content of an &as; metadata
                response which indicates that the
                <tt>claims</tt> request parameter and
                critical claims are supported by the server is shown in
                <xref target="authorization-server-metadata-example"/>.
            </t>

            <figure anchor="authorization-server-metadata-example"
                    title="Example of Metadata of an Authorization Server
                    that Supports the Claims Request Parameter and
                    Critical Claims">
                <sourcecode type="json"><![CDATA[
{
    "issuer" :
        "https://server.example.com",
    "authorization_endpoint" :
        "https://server.example.com/authorize",
    "token_endpoint" :
        "https://server.example.com/token",
    "token_endpoint_auth_methods_supported" :
        ["client_secret_basic", "private_key_jwt"],
    "token_endpoint_auth_signing_alg_values_supported" :
        ["RS256", "ES256"],
    "userinfo_endpoint" :
        "https://server.example.com/userinfo",
    "jwks_uri" :
        "https://server.example.com/jwks.json",
    "registration_endpoint" :
        "https://server.example.com/register",
    "scopes_supported" :
        ["openid", "profile", "email", "address", "phone",
         "offline_access"],
    "response_types_supported" :
        ["code", "code token"],
    "service_documentation" :
        "http://server.example.com/service_documentation.html",
    "ui_locales_supported" :
        ["en-US", "en-GB", "en-CA", "fr-FR", "fr-CA"],
    "claims_parameter_supported" : true,
    "critical_claims_supported" : true,
    "claims_supported" : ["sub", "http://example.com/monkey" ]
}]]>
                </sourcecode>
            </figure>

            <t>
                Note the last three members in particular.
            </t>
        </section>

        <section title="Security Considerations" anchor="security-considerations">
            <t><cref anchor="Security_Considerations_TBD_1">TBD</cref></t>
        </section>

        <section title="Privacy Considerations" anchor="privacy-considerations">
            <t><cref anchor="Privacy_Considerations_TBD_1">TBD</cref></t>
        </section>

        <section title="IANA Considerations" anchor="iana-considerations">
            <t><cref anchor="IANA_Considerations_TBD_1">TBD</cref></t>
        </section>
    </middle>

    <back xmlns:xi="http://www.w3.org/2001/XInclude">
        <references title="Normative References">
            <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"/>
            <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6749.xml"/>
            <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6901.xml"/>
            <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7519.xml"/>
            <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7662.xml"/>
            <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml"/>
            <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8259.xml"/>
            <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8414.xml"/>
        </references>

        <references title="Informative References">
            <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-oauth-token-exchange.xml"/>
            <reference anchor="OpenID.Core" target="http://openid.net/specs/openid-connect-core-1_0.html">
                <front>
                    <title>OpenID Connect Core 1.0</title>

                    <author fullname="Nat Sakimura" initials="N." surname="Sakimura">
                        <organization abbrev="NRI">Nomura Research Institute, Ltd.</organization>
                    </author>

                    <author fullname="John Bradley" initials="J." surname="Bradley">
                        <organization abbrev="Ping Identity">Ping Identity</organization>
                    </author>

                    <author fullname="Michael B. Jones" initials="M.B." surname="Jones">
                        <organization abbrev="Microsoft">Microsoft</organization>
                    </author>

                    <author fullname="Breno de Medeiros" initials="B." surname="de Medeiros">
                        <organization abbrev="Google">Google</organization>
                    </author>

                    <author fullname="Chuck Mortimore" initials="C." surname="Mortimore">
                        <organization abbrev="Salesforce">Salesforce</organization>
                    </author>

                    <date day="25" month="February" year="2014"/>
                </front>

                <seriesInfo name="OpenID Foundation" value="Standards" />
            </reference>
        </references>

        <section anchor="Acknowledgements" title="Acknowledgements">
            <t>
                The following individuals contributed ideas, feedback, wording and editorial guidance to this specification:
            </t>

            <t>
                Mark Dobrinic, Jacob Ideskog, Torsten Lodderstedt, Alice Russo
            </t>
        </section>

        <section title="Document History" anchor="document-history">
            <t>
                [[ to be removed by the RFC editor before publication as an RFC ]]
            </t>
            <t>-01</t>
            <ul spacing="compact">
                <li>Use of XML entities for common terms in XML version of doc</li>
                <li>Convert XML to v. 3 format</li>
                <li>Added additional acknowledgements</li>
                <li>Updated keywords paragraph</li>
                <li>Updated links to other RFCs</li>
                <li>Small format changes and fixing of typos</li>
            </ul>
            <t>-00</t>
            <ul spacing="compact">
                <li>
                    Initial draft.
                </li>
            </ul>
        </section>
    </back>
</rfc>